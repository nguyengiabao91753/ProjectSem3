// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectSem3.Models;

#nullable disable

namespace ProjectSem3.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240913031020_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.7.24405.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectSem3.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountID");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int")
                        .HasColumnName("LevelID");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("AccountId")
                        .HasName("PK__Accounts__349DA586459CDD34");

                    b.HasIndex("LevelId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ProjectSem3.Models.AgeGroup", b =>
                {
                    b.Property<int>("AgeGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AgeGroupID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgeGroupId"));

                    b.Property<string>("Discount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("AgeGroupId")
                        .HasName("PK__AgeGroup__5B9B0B756531FE14");

                    b.ToTable("AgeGroups");
                });

            modelBuilder.Entity("ProjectSem3.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("AgeGroupId")
                        .HasColumnType("int")
                        .HasColumnName("AgeGroupID");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("BusTripId")
                        .HasColumnType("int")
                        .HasColumnName("BusTripID");

                    b.Property<decimal>("Distance")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("PaymentStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal?>("PriceAfterDiscount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("SeatId")
                        .HasColumnType("int")
                        .HasColumnName("SeatID");

                    b.Property<string>("TicketCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte?>("TicketStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<int?>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID")
                        .HasDefaultValueSql("(NULL)");

                    b.HasKey("BookingId")
                        .HasName("PK__Bookings__73951ACDE13B6702");

                    b.HasIndex("AgeGroupId");

                    b.HasIndex("BusTripId");

                    b.HasIndex(new[] { "TicketCode" }, "UQ__Bookings__598CF7A383E52A74")
                        .IsUnique();

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("ProjectSem3.Models.Bus", b =>
                {
                    b.Property<int>("BusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusId"));

                    b.Property<byte?>("AirConditioned")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("BusTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BusTypeID");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SeatCount")
                        .HasColumnType("int");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("BusId")
                        .HasName("PK__Buses__6A0F60955A389DB8");

                    b.HasIndex("BusTypeId");

                    b.ToTable("Buses");
                });

            modelBuilder.Entity("ProjectSem3.Models.BusType", b =>
                {
                    b.Property<int>("BusTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BusTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusTypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("BusTypeId")
                        .HasName("PK__BusTypes__84A10CC8B044D471");

                    b.ToTable("BusTypes");
                });

            modelBuilder.Entity("ProjectSem3.Models.BusesSeat", b =>
                {
                    b.Property<int>("SeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SeatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatId"));

                    b.Property<int?>("BusId")
                        .HasColumnType("int")
                        .HasColumnName("BusID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("SeatId")
                        .HasName("PK__Buses_Se__311713D3E2343E89");

                    b.HasIndex("BusId");

                    b.ToTable("Buses_Seats", (string)null);
                });

            modelBuilder.Entity("ProjectSem3.Models.BusesTrip", b =>
                {
                    b.Property<int>("BusTripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BusTripID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusTripId"));

                    b.Property<int?>("BusId")
                        .HasColumnType("int")
                        .HasColumnName("BusID");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<int?>("TripId")
                        .HasColumnType("int")
                        .HasColumnName("TripID");

                    b.HasKey("BusTripId")
                        .HasName("PK__BusesTri__14ADEEEDBEDFC35F");

                    b.HasIndex("BusId");

                    b.HasIndex("TripId");

                    b.ToTable("BusesTrips");
                });

            modelBuilder.Entity("ProjectSem3.Models.CustomerFeedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<int?>("BusTripId")
                        .HasColumnType("int")
                        .HasColumnName("BusTripID");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("FeedbackDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Customer__6A4BEDF632949F12");

                    b.HasIndex("BusTripId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomerFeedback", (string)null);
                });

            modelBuilder.Entity("ProjectSem3.Models.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LevelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("LevelId")
                        .HasName("PK__Levels__09F03C0632759436");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("ProjectSem3.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LocationId")
                        .HasName("PK__Location__E7FEA47732F53FCB");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("ProjectSem3.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int")
                        .HasColumnName("BookingID");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A5852CF210A");

                    b.HasIndex("BookingId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ProjectSem3.Models.Policy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PolicyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PolicyId")
                        .HasName("PK__Policies__2E133944A05EB817");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("ProjectSem3.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TripID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"));

                    b.Property<int?>("ArrivalLocationId")
                        .HasColumnType("int")
                        .HasColumnName("ArrivalLocationID");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartureLocationId")
                        .HasColumnType("int")
                        .HasColumnName("DepartureLocationID");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.HasKey("TripId")
                        .HasName("PK__Trips__51DC711EFB36F7D2");

                    b.HasIndex("ArrivalLocationId");

                    b.HasIndex("DepartureLocationId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("ProjectSem3.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCACA57E2758");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjectSem3.Models.Account", b =>
                {
                    b.HasOne("ProjectSem3.Models.User", "AccountNavigation")
                        .WithOne("Account")
                        .HasForeignKey("ProjectSem3.Models.Account", "AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Accounts__Accoun__5629CD9C");

                    b.HasOne("ProjectSem3.Models.Level", "Level")
                        .WithMany("Accounts")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("FK__Accounts__LevelI__5812160E");

                    b.Navigation("AccountNavigation");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("ProjectSem3.Models.Booking", b =>
                {
                    b.HasOne("ProjectSem3.Models.AgeGroup", "AgeGroup")
                        .WithMany("Bookings")
                        .HasForeignKey("AgeGroupId")
                        .HasConstraintName("FK__Bookings__AgeGro__60A75C0F");

                    b.HasOne("ProjectSem3.Models.BusesTrip", "BusTrip")
                        .WithMany("Bookings")
                        .HasForeignKey("BusTripId")
                        .HasConstraintName("FK__Bookings__BusTri__5FB337D6");

                    b.Navigation("AgeGroup");

                    b.Navigation("BusTrip");
                });

            modelBuilder.Entity("ProjectSem3.Models.Bus", b =>
                {
                    b.HasOne("ProjectSem3.Models.BusType", "BusType")
                        .WithMany("Buses")
                        .HasForeignKey("BusTypeId")
                        .HasConstraintName("FK__Buses__BusTypeID__403A8C7D");

                    b.Navigation("BusType");
                });

            modelBuilder.Entity("ProjectSem3.Models.BusesSeat", b =>
                {
                    b.HasOne("ProjectSem3.Models.Bus", "Bus")
                        .WithMany("BusesSeats")
                        .HasForeignKey("BusId")
                        .HasConstraintName("FK__Buses_Sea__BusID__44FF419A");

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("ProjectSem3.Models.BusesTrip", b =>
                {
                    b.HasOne("ProjectSem3.Models.Bus", "Bus")
                        .WithMany("BusesTrips")
                        .HasForeignKey("BusId")
                        .HasConstraintName("FK__BusesTrip__BusID__4F7CD00D");

                    b.HasOne("ProjectSem3.Models.Trip", "Trip")
                        .WithMany("BusesTrips")
                        .HasForeignKey("TripId")
                        .HasConstraintName("FK__BusesTrip__TripI__5070F446");

                    b.Navigation("Bus");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("ProjectSem3.Models.CustomerFeedback", b =>
                {
                    b.HasOne("ProjectSem3.Models.BusesTrip", "BusTrip")
                        .WithMany("CustomerFeedbacks")
                        .HasForeignKey("BusTripId")
                        .HasConstraintName("FK__CustomerF__BusTr__693CA210");

                    b.HasOne("ProjectSem3.Models.User", "User")
                        .WithMany("CustomerFeedbacks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__CustomerF__UserI__68487DD7");

                    b.Navigation("BusTrip");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjectSem3.Models.Payment", b =>
                {
                    b.HasOne("ProjectSem3.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK__Payments__Bookin__656C112C");

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("ProjectSem3.Models.Trip", b =>
                {
                    b.HasOne("ProjectSem3.Models.Location", "ArrivalLocation")
                        .WithMany("TripArrivalLocations")
                        .HasForeignKey("ArrivalLocationId")
                        .HasConstraintName("FK__Trips__ArrivalLo__4BAC3F29");

                    b.HasOne("ProjectSem3.Models.Location", "DepartureLocation")
                        .WithMany("TripDepartureLocations")
                        .HasForeignKey("DepartureLocationId")
                        .HasConstraintName("FK__Trips__Departure__4AB81AF0");

                    b.Navigation("ArrivalLocation");

                    b.Navigation("DepartureLocation");
                });

            modelBuilder.Entity("ProjectSem3.Models.AgeGroup", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("ProjectSem3.Models.Booking", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("ProjectSem3.Models.Bus", b =>
                {
                    b.Navigation("BusesSeats");

                    b.Navigation("BusesTrips");
                });

            modelBuilder.Entity("ProjectSem3.Models.BusType", b =>
                {
                    b.Navigation("Buses");
                });

            modelBuilder.Entity("ProjectSem3.Models.BusesTrip", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("CustomerFeedbacks");
                });

            modelBuilder.Entity("ProjectSem3.Models.Level", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("ProjectSem3.Models.Location", b =>
                {
                    b.Navigation("TripArrivalLocations");

                    b.Navigation("TripDepartureLocations");
                });

            modelBuilder.Entity("ProjectSem3.Models.Trip", b =>
                {
                    b.Navigation("BusesTrips");
                });

            modelBuilder.Entity("ProjectSem3.Models.User", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("CustomerFeedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
